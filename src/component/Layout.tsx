import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styled from "styled-components";
import Logo from "../assets/Logo.png";
import { Button } from "@chakra-ui/react";
import { useState } from "react";
import { HamburgerIcon } from "@chakra-ui/icons";
interface Props {
  children: React.ReactNode;
}

const LayoutWrapper = styled.div`
  width: 100%;
  .header__main {
    display: flex;
    background-color: #f37321;
    color: #fff;
    .tit__header {
      margin: 5px;
      display: inline-block;
      font-size: 20px;
      font-weight: 700;
      text-align: center;
      color: #fff;
    }
  }
  .wrapper__content {
    display: flex;
    position: relative;
    height: 100vh;
    width: 100%;
    .nav__sidebar {
      text-align: center;
      position: fixed;
      z-index: 1000;
      top: 0;
      bottom: 0;
      background-color: #f37321;
      padding: 30px;
      display: flex;
      flex-direction: column;
      min-width: 250px;
      color: #fff;
      .list__sidebar {
        margin-top: 100px;
        li {
          &:first-child {
            margin: 0;
          }
          margin: 40px 0;
          a {
            color: #fff;
            text-decoration: none;
            &:hover {
              color: #fcc6a2;
            }
          }
        }
      }
    }
    .section__content {
      width: 100%;
      @media (max-width: 768px) {
        margin-left: 0;
      }
      margin-left: 300px;
      padding: 35px;
    }
    .list__rw {
      margin-top: 20px;
    }
  }
`;

const NavToggleButton = styled.button`
  display: block;
  position: absolute;
  top: 10px;
  right: 10px;
  width: 50px;
  height: 50px;
  border: none;
  background-color: transparent;
  cursor: pointer;
  z-index: 2000;

  &:focus {
    outline: none;
  }

  span {
    display: block;
    position: absolute;
    width: 30px;
    height: 3px;
    background-color: white;
    border-radius: 3px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    &:before,
    &:after {
      content: "";
      position: absolute;
      width: 30px;
      height: 3px;
      background-color: white;
      border-radius: 3px;
      top: 0;
      left: 0;
      transition: transform 0.3s ease;
    }

    &:before {
      transform: translateY(-10px);
    }

    &:after {
      transform: translateY(10px);
    }
  }

  &.open {
    span {
      background-color: transparent;

      &:before {
        transform: rotate(-45deg) translate(-8px, 8px);
      }

      &:after {
        transform: rotate(45deg) translate(-8px, -8px);
      }
    }
  }
`;

const Layout = ({ children }: Props) => {
  const [isRevivalMenuOpen, setIsRevivalMenuOpen] = useState<boolean>(false);
  const [isCellMenuOpen, setIsCellMenuOpen] = useState<boolean>(false);
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  return (
    <LayoutWrapper>
      <Head>
        <title>ELIM</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="../../public/favicon.ico" />
      </Head>
      <main>
        <div className="wrapper__content">
          <NavToggleButton
            className={isSidebarOpen ? "open" : ""}
            onClick={toggleSidebar}>
            <HamburgerIcon />
          </NavToggleButton>
          {isSidebarOpen && (
            <aside className="nav__sidebar">
              <header className="header__main">
                <Image
                  src={Logo}
                  alt="logo"
                  className="img__logo"
                  width={40}
                  height={30}
                />
                <h1 className="tit__header">admin</h1>
              </header>
              <h2 className="hidden">Sidebar</h2>
              <ul className="list__sidebar">
                <li>
                  <Button
                    colorScheme={"orange"}
                    onClick={() => {
                      setIsRevivalMenuOpen(!isRevivalMenuOpen);
                    }}>
                    REVIVAL WORSHIP
                  </Button>
                </li>
                <li>
                  {isRevivalMenuOpen && (
                    <ul className={"list__rw"}>
                      <li>
                        <Link href="/members" passHref>
                          MEMBERS
                        </Link>
                      </li>
                      <li>
                        <Link href="/schedule" passHref>
                          SCHEDULE
                        </Link>
                      </li>
                      <li>
                        <Link href="/upload" passHref>
                          UPLOAD
                        </Link>
                      </li>
                      <li>
                        <Link href="/search" passHref>
                          SEARCH
                        </Link>
                      </li>
                    </ul>
                  )}
                </li>
                <li>
                  <ul>
                    <li>
                      <Button
                        colorScheme={"orange"}
                        onClick={() => {
                          setIsCellMenuOpen(!isCellMenuOpen);
                        }}>
                        CELL
                      </Button>
                    </li>
                    <li>
                      {isCellMenuOpen && (
                        <ul className={"list__rw"}>
                          <li>
                            <Link href="/cell-members" passHref>
                              MEMBERS
                            </Link>
                          </li>
                          <li>
                            <Link href="/attendance" passHref>
                              ATTENDANCE
                            </Link>
                          </li>
                        </ul>
                      )}
                    </li>
                  </ul>
                </li>
              </ul>
            </aside>
          )}
          <section className="section__content">{children}</section>
        </div>
      </main>

      <footer></footer>
    </LayoutWrapper>
  );
};

export default Layout;
